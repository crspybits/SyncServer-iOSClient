SyncServer-iOSClient

Version 7.0.0 (TBD)
	* Adding Dropbox support-- in client and example app.
		- via a new subspec (Dropbox) in the Cocoapod.
	* Fixed breaking change in Facebook SDK
	* Changes for TappableButton-- bringing back to Swift 4
	* Made the ServerAPI usage of delegate:SyncServerDelegate optional `?` because it was causing my tests to crash, and it's just used for reporting events.
	* Cleaned up some code in the GoogleSignIn
	* Cleaned up podspec
	* Using different header key for Google authentication authorization code-- breaking change.
	* Fixed on ~> 1.2 for Gloss dependency-- due to breaking change I'm not ready for in Gloss 2.0
	* Added Dropbox into test cases; fixed issues with two test cases.
	
Version 6.0.1 (12/3/17)
	* Client not properly logged in, but no decent indication on UI
		https://github.com/crspybits/SharedImages/issues/64
	* Added a delegate method and alert to give feedback to user when we get a 401/unauthorized back from the user (and can't refresh their sign-in)
	
Version 6.0.0 (12/2/17)
	* Changed parameters of enum case willStartDownloads-- to add deletions.
	
Version 5.0.1 (11/29/17)
	* Attempted a fix to issue Dany was having with sticky sign-in. Added logging for this too, so if problem happens again, I should be able to debug it more easily.
		https://github.com/crspybits/SharedImages/issues/51

Version 5.0.0
	* Enabled sticky sign-in's: So user's don't have to signed-in as much. This is a breaking change because it changed the signature of methods in sign-in protocols and added a method in a sign-in protocol. Sticky sign-in also changes the character or emphasis of sign-in's in the SyncServer client. This required changes to the Google and Facebook signin's. 

Version 4.1.1
	* ?? 
	
Version 4.1.0
	* fixed bug where call to func application(_ app: UIApplication, open url: URL, options: [UIApplicationOpenURLOptionsKey : Any] = [:]) -> Bool {
	in the SyncManager would fail with an assertion if user was not signed in.
	
	* Enabled more general sign-in when redeeming sharing invitation.
		See also https://github.com/crspybits/SharedImages/issues/43

Version 4.0.0; 9/23/17
	* Added event (willStartDownloads) to indicate the number of downloads that will happen.

	* Making Downloads More Flexible in the SyncServer
		http://www.spasticmuffin.biz/blog/2017/09/15/making-downloads-more-flexible-in-the-syncserver/
		We are no longer going to discard all files if a failure occurs in the download. The local meta data is going to get updated with *every* download. We're moving to a more "eventual consistency" type of approach for downloads at least.
		
	* Removed various events, and replaced a SyncServerDelegate method. This is a breaking change relative to prior versions of the client interface.
	
	* Added more test cases for this eventual consistency change.
		
	* Add client call to cancel ongoing sync operation.
		E.g., this should be useful if downloads stall for some reason. 
	
	* Add tests for cancelling ongoing sync operation.
	
	* Removed unused properties on DownloadFileTracker objects due to these changes:
	     appMetaData, fileSizeBytes, localURL

Version 3.2.0; 9/9/17; 
	* Using version 2.1 of SyncServer-Shared-- to deal with NGNIX issue.

8/29/17	
	* Removed usage of update/creation dates from code internally.
	
	* Added new version (version 3) to Core Data model because of this.
		Lightweight migration on Core Data in order to remove update/creation dates from the upload tracker.
	
	* Fix bug with creation date where upload would crash
	
	* Added new client method to delete an array of files atomically.
		This required the addition of an undo manager to Core Data.
	